# automatically generated by the FlatBuffers compiler, do not modify

# namespace: object_detection2d

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Instance(object):
    __slots__ = ['_tab']

    @classmethod
    def SizeOf(cls):
        return 40

    # Instance
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Instance
    def OrientedBoundingBox(self, obj):
        obj.Init(self._tab.Bytes, self._tab.Pos + 0)
        return obj

    # Instance
    def ClassIndex(self): return self._tab.Get(flatbuffers.number_types.Uint64Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(24))
    # Instance
    def Score(self): return self._tab.Get(flatbuffers.number_types.Float32Flags, self._tab.Pos + flatbuffers.number_types.UOffsetTFlags.py_type(32))

def CreateInstance(builder, orientedBoundingBox_centerX, orientedBoundingBox_centerY, orientedBoundingBox_width, orientedBoundingBox_height, orientedBoundingBox_angle, classIndex, score):
    builder.Prep(8, 40)
    builder.Pad(4)
    builder.PrependFloat32(score)
    builder.PrependUint64(classIndex)
    builder.Pad(4)
    builder.Prep(4, 20)
    builder.PrependFloat32(orientedBoundingBox_angle)
    builder.PrependFloat32(orientedBoundingBox_height)
    builder.PrependFloat32(orientedBoundingBox_width)
    builder.PrependFloat32(orientedBoundingBox_centerY)
    builder.PrependFloat32(orientedBoundingBox_centerX)
    return builder.Offset()
